"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/PieChart.tsx":
/*!*********************************!*\
  !*** ./components/PieChart.tsx ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PieChart: function() { return /* binding */ PieChart; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_google_charts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-google-charts */ \"(app-pages-browser)/./node_modules/react-google-charts/dist/index.js\");\n// import React, { useEffect } from 'react';\n// interface PieChartProps {\n//     correctAnswers: string;\n// }\n// export function PieChart({ correctAnswers }: PieChartProps) {\n//     useEffect(() => {\n//         // Load the Google Charts library\n//         const script = document.createElement('script');\n//         script.src = \"https://www.gstatic.com/charts/loader.js\";\n//         script.async = true;\n//         script.onload = () => {\n//             // Initialize the Google Charts library\n//             google.charts.load('current', { 'packages': ['corechart'] });\n//             google.charts.setOnLoadCallback(drawChart);\n//         };\n//         document.body.appendChild(script);\n//         console.log(parseInt(correctAnswers));\n//         // Function to draw the chart\n//         function drawChart() {\n//             const data = google.visualization.arrayToDataTable([\n//                 ['Effort', 'Amount given'],\n//                 ['Correct', parseInt(correctAnswers)],\n//                 ['Incorrect', 15 - parseInt(correctAnswers)],\n//             ]);\n//             const options = {\n//                 pieHole: 0.6,\n//                 pieSliceTextStyle: {\n//                     color: 'black',\n//                 },\n//                 legend: 'none',\n//                 slices: {\n//                     0: { color: '#1d4ed8' }, // Green for correct answers\n//                     1: { color: '#94a3b8' }, // White for incorrect answers\n//                 },\n//                 tooltip: { trigger: 'none' }, // Turn off the tooltip\n//                 pieSliceBorderColor: 'none', // Remove the border highlight on select\n//                 pieSliceText: 'none', // Remove the percentage text\n//             };\n//             const chart = new google.visualization.PieChart(document.getElementById('donut_single'));\n//             chart.draw(data, options);\n//         }\n//         return () => {\n//             // Clean up the script element\n//             document.body.removeChild(script);\n//         };\n//     }, [correctAnswers]);\n//     return (\n//         <div id=\"donut_single\" className='' style={{ width: '800px', height: '400px' }}></div>\n//     );\n// }\n\n\n\nfunction PieChart(param) {\n    let { correctAnswers } = param;\n    const data = [\n        [\n            \"Effort\",\n            \"Amount given\"\n        ],\n        [\n            \"Correct\",\n            parseInt(correctAnswers)\n        ],\n        [\n            \"Incorrect\",\n            15 - parseInt(correctAnswers)\n        ]\n    ];\n    const options = {\n        pieHole: 0.6,\n        pieSliceTextStyle: {\n            color: \"black\"\n        },\n        width: 400,\n        height: 300,\n        legend: \"none\",\n        slices: {\n            0: {\n                color: \"#1d4ed8\"\n            },\n            1: {\n                color: \"#94a3b8\"\n            }\n        },\n        tooltip: {\n            trigger: \"none\"\n        },\n        pieSliceBorderColor: \"none\",\n        pieSliceText: \"none\"\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        id: \"donut_single\",\n        className: \"\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_google_charts__WEBPACK_IMPORTED_MODULE_2__.Chart, {\n            chartType: \"PieChart\",\n            data: data,\n            options: options,\n            width: \"100%\",\n            height: \"400px\"\n        }, void 0, false, {\n            fileName: \"/home/sourabh/Desktop/assignment-whatBytes/components/PieChart.tsx\",\n            lineNumber: 93,\n            columnNumber: 13\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/sourabh/Desktop/assignment-whatBytes/components/PieChart.tsx\",\n        lineNumber: 92,\n        columnNumber: 9\n    }, this);\n}\n_c = PieChart;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvUGllQ2hhcnQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsNENBQTRDO0FBRTVDLDRCQUE0QjtBQUM1Qiw4QkFBOEI7QUFDOUIsSUFBSTtBQUVKLGdFQUFnRTtBQUNoRSx3QkFBd0I7QUFDeEIsNENBQTRDO0FBQzVDLDJEQUEyRDtBQUMzRCxtRUFBbUU7QUFDbkUsK0JBQStCO0FBQy9CLGtDQUFrQztBQUNsQyxzREFBc0Q7QUFDdEQsNEVBQTRFO0FBQzVFLDBEQUEwRDtBQUMxRCxhQUFhO0FBQ2IsNkNBQTZDO0FBRTdDLGlEQUFpRDtBQUNqRCx3Q0FBd0M7QUFDeEMsaUNBQWlDO0FBQ2pDLG1FQUFtRTtBQUNuRSw4Q0FBOEM7QUFDOUMseURBQXlEO0FBQ3pELGdFQUFnRTtBQUNoRSxrQkFBa0I7QUFFbEIsZ0NBQWdDO0FBQ2hDLGdDQUFnQztBQUNoQyx1Q0FBdUM7QUFDdkMsc0NBQXNDO0FBQ3RDLHFCQUFxQjtBQUNyQixrQ0FBa0M7QUFDbEMsNEJBQTRCO0FBQzVCLDRFQUE0RTtBQUM1RSw4RUFBOEU7QUFDOUUscUJBQXFCO0FBQ3JCLHdFQUF3RTtBQUN4RSx3RkFBd0Y7QUFDeEYsc0VBQXNFO0FBQ3RFLGlCQUFpQjtBQUVqQix3R0FBd0c7QUFDeEcseUNBQXlDO0FBQ3pDLFlBQVk7QUFFWix5QkFBeUI7QUFDekIsNkNBQTZDO0FBQzdDLGlEQUFpRDtBQUNqRCxhQUFhO0FBQ2IsNEJBQTRCO0FBRTVCLGVBQWU7QUFDZixpR0FBaUc7QUFDakcsU0FBUztBQUNULElBQUk7O0FBR3NCO0FBQ2tCO0FBTXJDLFNBQVNFLFNBQVMsS0FBaUM7UUFBakMsRUFBRUMsY0FBYyxFQUFpQixHQUFqQztJQUNyQixNQUFNQyxPQUFPO1FBQ1Q7WUFBQztZQUFVO1NBQWU7UUFDMUI7WUFBQztZQUFXQyxTQUFTRjtTQUFnQjtRQUNyQztZQUFDO1lBQWEsS0FBS0UsU0FBU0Y7U0FBZ0I7S0FDL0M7SUFFRCxNQUFNRyxVQUFVO1FBQ1pDLFNBQVM7UUFDVEMsbUJBQW1CO1lBQ2ZDLE9BQU87UUFDWDtRQUNBQyxPQUFPO1FBQ1BDLFFBQVE7UUFDUkMsUUFBUTtRQUNSQyxRQUFRO1lBQ0osR0FBRztnQkFBRUosT0FBTztZQUFVO1lBQ3RCLEdBQUc7Z0JBQUVBLE9BQU87WUFBVTtRQUMxQjtRQUNBSyxTQUFTO1lBQUVDLFNBQVM7UUFBTztRQUMzQkMscUJBQXFCO1FBQ3JCQyxjQUFjO0lBQ2xCO0lBRUEscUJBQ0ksOERBQUNDO1FBQUlDLElBQUc7UUFBZUMsV0FBVTtrQkFDN0IsNEVBQUNuQixzREFBS0E7WUFDRm9CLFdBQVU7WUFDVmpCLE1BQU1BO1lBQ05FLFNBQVNBO1lBQ1RJLE9BQU07WUFDTkMsUUFBTzs7Ozs7Ozs7Ozs7QUFJdkI7S0FuQ2dCVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL1BpZUNoYXJ0LnRzeD8zMDhkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbi8vIGludGVyZmFjZSBQaWVDaGFydFByb3BzIHtcbi8vICAgICBjb3JyZWN0QW5zd2Vyczogc3RyaW5nO1xuLy8gfVxuXG4vLyBleHBvcnQgZnVuY3Rpb24gUGllQ2hhcnQoeyBjb3JyZWN0QW5zd2VycyB9OiBQaWVDaGFydFByb3BzKSB7XG4vLyAgICAgdXNlRWZmZWN0KCgpID0+IHtcbi8vICAgICAgICAgLy8gTG9hZCB0aGUgR29vZ2xlIENoYXJ0cyBsaWJyYXJ5XG4vLyAgICAgICAgIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuLy8gICAgICAgICBzY3JpcHQuc3JjID0gXCJodHRwczovL3d3dy5nc3RhdGljLmNvbS9jaGFydHMvbG9hZGVyLmpzXCI7XG4vLyAgICAgICAgIHNjcmlwdC5hc3luYyA9IHRydWU7XG4vLyAgICAgICAgIHNjcmlwdC5vbmxvYWQgPSAoKSA9PiB7XG4vLyAgICAgICAgICAgICAvLyBJbml0aWFsaXplIHRoZSBHb29nbGUgQ2hhcnRzIGxpYnJhcnlcbi8vICAgICAgICAgICAgIGdvb2dsZS5jaGFydHMubG9hZCgnY3VycmVudCcsIHsgJ3BhY2thZ2VzJzogWydjb3JlY2hhcnQnXSB9KTtcbi8vICAgICAgICAgICAgIGdvb2dsZS5jaGFydHMuc2V0T25Mb2FkQ2FsbGJhY2soZHJhd0NoYXJ0KTtcbi8vICAgICAgICAgfTtcbi8vICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xuXG4vLyAgICAgICAgIGNvbnNvbGUubG9nKHBhcnNlSW50KGNvcnJlY3RBbnN3ZXJzKSk7XG4vLyAgICAgICAgIC8vIEZ1bmN0aW9uIHRvIGRyYXcgdGhlIGNoYXJ0XG4vLyAgICAgICAgIGZ1bmN0aW9uIGRyYXdDaGFydCgpIHtcbi8vICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBnb29nbGUudmlzdWFsaXphdGlvbi5hcnJheVRvRGF0YVRhYmxlKFtcbi8vICAgICAgICAgICAgICAgICBbJ0VmZm9ydCcsICdBbW91bnQgZ2l2ZW4nXSxcbi8vICAgICAgICAgICAgICAgICBbJ0NvcnJlY3QnLCBwYXJzZUludChjb3JyZWN0QW5zd2VycyldLFxuLy8gICAgICAgICAgICAgICAgIFsnSW5jb3JyZWN0JywgMTUgLSBwYXJzZUludChjb3JyZWN0QW5zd2VycyldLFxuLy8gICAgICAgICAgICAgXSk7XG5cbi8vICAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4vLyAgICAgICAgICAgICAgICAgcGllSG9sZTogMC42LFxuLy8gICAgICAgICAgICAgICAgIHBpZVNsaWNlVGV4dFN0eWxlOiB7XG4vLyAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnYmxhY2snLFxuLy8gICAgICAgICAgICAgICAgIH0sXG4vLyAgICAgICAgICAgICAgICAgbGVnZW5kOiAnbm9uZScsXG4vLyAgICAgICAgICAgICAgICAgc2xpY2VzOiB7XG4vLyAgICAgICAgICAgICAgICAgICAgIDA6IHsgY29sb3I6ICcjMWQ0ZWQ4JyB9LCAvLyBHcmVlbiBmb3IgY29ycmVjdCBhbnN3ZXJzXG4vLyAgICAgICAgICAgICAgICAgICAgIDE6IHsgY29sb3I6ICcjOTRhM2I4JyB9LCAvLyBXaGl0ZSBmb3IgaW5jb3JyZWN0IGFuc3dlcnNcbi8vICAgICAgICAgICAgICAgICB9LFxuLy8gICAgICAgICAgICAgICAgIHRvb2x0aXA6IHsgdHJpZ2dlcjogJ25vbmUnIH0sIC8vIFR1cm4gb2ZmIHRoZSB0b29sdGlwXG4vLyAgICAgICAgICAgICAgICAgcGllU2xpY2VCb3JkZXJDb2xvcjogJ25vbmUnLCAvLyBSZW1vdmUgdGhlIGJvcmRlciBoaWdobGlnaHQgb24gc2VsZWN0XG4vLyAgICAgICAgICAgICAgICAgcGllU2xpY2VUZXh0OiAnbm9uZScsIC8vIFJlbW92ZSB0aGUgcGVyY2VudGFnZSB0ZXh0XG4vLyAgICAgICAgICAgICB9O1xuXG4vLyAgICAgICAgICAgICBjb25zdCBjaGFydCA9IG5ldyBnb29nbGUudmlzdWFsaXphdGlvbi5QaWVDaGFydChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZG9udXRfc2luZ2xlJykpO1xuLy8gICAgICAgICAgICAgY2hhcnQuZHJhdyhkYXRhLCBvcHRpb25zKTtcbi8vICAgICAgICAgfVxuXG4vLyAgICAgICAgIHJldHVybiAoKSA9PiB7XG4vLyAgICAgICAgICAgICAvLyBDbGVhbiB1cCB0aGUgc2NyaXB0IGVsZW1lbnRcbi8vICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcbi8vICAgICAgICAgfTtcbi8vICAgICB9LCBbY29ycmVjdEFuc3dlcnNdKTtcblxuLy8gICAgIHJldHVybiAoXG4vLyAgICAgICAgIDxkaXYgaWQ9XCJkb251dF9zaW5nbGVcIiBjbGFzc05hbWU9Jycgc3R5bGU9e3sgd2lkdGg6ICc4MDBweCcsIGhlaWdodDogJzQwMHB4JyB9fT48L2Rpdj5cbi8vICAgICApO1xuLy8gfVxuXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDaGFydCB9IGZyb20gJ3JlYWN0LWdvb2dsZS1jaGFydHMnO1xuXG5pbnRlcmZhY2UgUGllQ2hhcnRQcm9wcyB7XG4gICAgY29ycmVjdEFuc3dlcnM6IHN0cmluZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFBpZUNoYXJ0KHsgY29ycmVjdEFuc3dlcnMgfTogUGllQ2hhcnRQcm9wcykge1xuICAgIGNvbnN0IGRhdGEgPSBbXG4gICAgICAgIFsnRWZmb3J0JywgJ0Ftb3VudCBnaXZlbiddLFxuICAgICAgICBbJ0NvcnJlY3QnLCBwYXJzZUludChjb3JyZWN0QW5zd2VycyldLFxuICAgICAgICBbJ0luY29ycmVjdCcsIDE1IC0gcGFyc2VJbnQoY29ycmVjdEFuc3dlcnMpXSxcbiAgICBdO1xuXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgcGllSG9sZTogMC42LFxuICAgICAgICBwaWVTbGljZVRleHRTdHlsZToge1xuICAgICAgICAgICAgY29sb3I6ICdibGFjaycsXG4gICAgICAgIH0sXG4gICAgICAgIHdpZHRoOiA0MDAsXG4gICAgICAgIGhlaWdodDogMzAwLFxuICAgICAgICBsZWdlbmQ6ICdub25lJyxcbiAgICAgICAgc2xpY2VzOiB7XG4gICAgICAgICAgICAwOiB7IGNvbG9yOiAnIzFkNGVkOCcgfSwgLy8gQmx1ZSBmb3IgY29ycmVjdCBhbnN3ZXJzXG4gICAgICAgICAgICAxOiB7IGNvbG9yOiAnIzk0YTNiOCcgfSwgLy8gR3JheSBmb3IgaW5jb3JyZWN0IGFuc3dlcnNcbiAgICAgICAgfSxcbiAgICAgICAgdG9vbHRpcDogeyB0cmlnZ2VyOiAnbm9uZScgfSwgLy8gVHVybiBvZmYgdGhlIHRvb2x0aXBcbiAgICAgICAgcGllU2xpY2VCb3JkZXJDb2xvcjogJ25vbmUnLCAvLyBSZW1vdmUgdGhlIGJvcmRlciBoaWdobGlnaHQgb24gc2VsZWN0XG4gICAgICAgIHBpZVNsaWNlVGV4dDogJ25vbmUnLCAvLyBSZW1vdmUgdGhlIHBlcmNlbnRhZ2UgdGV4dFxuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGlkPVwiZG9udXRfc2luZ2xlXCIgY2xhc3NOYW1lPScnPlxuICAgICAgICAgICAgPENoYXJ0XG4gICAgICAgICAgICAgICAgY2hhcnRUeXBlPVwiUGllQ2hhcnRcIlxuICAgICAgICAgICAgICAgIGRhdGE9e2RhdGF9XG4gICAgICAgICAgICAgICAgb3B0aW9ucz17b3B0aW9uc31cbiAgICAgICAgICAgICAgICB3aWR0aD1cIjEwMCVcIlxuICAgICAgICAgICAgICAgIGhlaWdodD1cIjQwMHB4XCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICk7XG59XG5cbiJdLCJuYW1lcyI6WyJSZWFjdCIsIkNoYXJ0IiwiUGllQ2hhcnQiLCJjb3JyZWN0QW5zd2VycyIsImRhdGEiLCJwYXJzZUludCIsIm9wdGlvbnMiLCJwaWVIb2xlIiwicGllU2xpY2VUZXh0U3R5bGUiLCJjb2xvciIsIndpZHRoIiwiaGVpZ2h0IiwibGVnZW5kIiwic2xpY2VzIiwidG9vbHRpcCIsInRyaWdnZXIiLCJwaWVTbGljZUJvcmRlckNvbG9yIiwicGllU2xpY2VUZXh0IiwiZGl2IiwiaWQiLCJjbGFzc05hbWUiLCJjaGFydFR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/PieChart.tsx\n"));

/***/ })

});