/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/PieChart.tsx":
/*!*********************************!*\
  !*** ./components/PieChart.tsx ***!
  \*********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import React, { useEffect } from 'react';\n// interface PieChartProps {\n//     correctAnswers: string;\n// }\n// export function PieChart({ correctAnswers }: PieChartProps) {\n//     useEffect(() => {\n//         // Load the Google Charts library\n//         const script = document.createElement('script');\n//         script.src = \"https://www.gstatic.com/charts/loader.js\";\n//         script.async = true;\n//         script.onload = () => {\n//             // Initialize the Google Charts library\n//             google.charts.load('current', { 'packages': ['corechart'] });\n//             google.charts.setOnLoadCallback(drawChart);\n//         };\n//         document.body.appendChild(script);\n//         console.log(parseInt(correctAnswers));\n//         // Function to draw the chart\n//         function drawChart() {\n//             const data = google.visualization.arrayToDataTable([\n//                 ['Effort', 'Amount given'],\n//                 ['Correct', parseInt(correctAnswers)],\n//                 ['Incorrect', 15 - parseInt(correctAnswers)],\n//             ]);\n//             const options = {\n//                 pieHole: 0.6,\n//                 pieSliceTextStyle: {\n//                     color: 'black',\n//                 },\n//                 legend: 'none',\n//                 slices: {\n//                     0: { color: '#1d4ed8' }, // Green for correct answers\n//                     1: { color: '#94a3b8' }, // White for incorrect answers\n//                 },\n//                 tooltip: { trigger: 'none' }, // Turn off the tooltip\n//                 pieSliceBorderColor: 'none', // Remove the border highlight on select\n//                 pieSliceText: 'none', // Remove the percentage text\n//             };\n//             const chart = new google.visualization.PieChart(document.getElementById('donut_single'));\n//             chart.draw(data, options);\n//         }\n//         return () => {\n//             // Clean up the script element\n//             document.body.removeChild(script);\n//         };\n//     }, [correctAnswers]);\n//     return (\n//         <div id=\"donut_single\" className='' style={{ width: '800px', height: '400px' }}></div>\n//     );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvUGllQ2hhcnQudHN4IiwibWFwcGluZ3MiOiJBQUFBLDRDQUE0QztBQUU1Qyw0QkFBNEI7QUFDNUIsOEJBQThCO0FBQzlCLElBQUk7QUFFSixnRUFBZ0U7QUFDaEUsd0JBQXdCO0FBQ3hCLDRDQUE0QztBQUM1QywyREFBMkQ7QUFDM0QsbUVBQW1FO0FBQ25FLCtCQUErQjtBQUMvQixrQ0FBa0M7QUFDbEMsc0RBQXNEO0FBQ3RELDRFQUE0RTtBQUM1RSwwREFBMEQ7QUFDMUQsYUFBYTtBQUNiLDZDQUE2QztBQUU3QyxpREFBaUQ7QUFDakQsd0NBQXdDO0FBQ3hDLGlDQUFpQztBQUNqQyxtRUFBbUU7QUFDbkUsOENBQThDO0FBQzlDLHlEQUF5RDtBQUN6RCxnRUFBZ0U7QUFDaEUsa0JBQWtCO0FBRWxCLGdDQUFnQztBQUNoQyxnQ0FBZ0M7QUFDaEMsdUNBQXVDO0FBQ3ZDLHNDQUFzQztBQUN0QyxxQkFBcUI7QUFDckIsa0NBQWtDO0FBQ2xDLDRCQUE0QjtBQUM1Qiw0RUFBNEU7QUFDNUUsOEVBQThFO0FBQzlFLHFCQUFxQjtBQUNyQix3RUFBd0U7QUFDeEUsd0ZBQXdGO0FBQ3hGLHNFQUFzRTtBQUN0RSxpQkFBaUI7QUFFakIsd0dBQXdHO0FBQ3hHLHlDQUF5QztBQUN6QyxZQUFZO0FBRVoseUJBQXlCO0FBQ3pCLDZDQUE2QztBQUM3QyxpREFBaUQ7QUFDakQsYUFBYTtBQUNiLDRCQUE0QjtBQUU1QixlQUFlO0FBQ2YsaUdBQWlHO0FBQ2pHLFNBQVM7QUFDVCxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvUGllQ2hhcnQudHN4PzMwOGQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuLy8gaW50ZXJmYWNlIFBpZUNoYXJ0UHJvcHMge1xuLy8gICAgIGNvcnJlY3RBbnN3ZXJzOiBzdHJpbmc7XG4vLyB9XG5cbi8vIGV4cG9ydCBmdW5jdGlvbiBQaWVDaGFydCh7IGNvcnJlY3RBbnN3ZXJzIH06IFBpZUNoYXJ0UHJvcHMpIHtcbi8vICAgICB1c2VFZmZlY3QoKCkgPT4ge1xuLy8gICAgICAgICAvLyBMb2FkIHRoZSBHb29nbGUgQ2hhcnRzIGxpYnJhcnlcbi8vICAgICAgICAgY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4vLyAgICAgICAgIHNjcmlwdC5zcmMgPSBcImh0dHBzOi8vd3d3LmdzdGF0aWMuY29tL2NoYXJ0cy9sb2FkZXIuanNcIjtcbi8vICAgICAgICAgc2NyaXB0LmFzeW5jID0gdHJ1ZTtcbi8vICAgICAgICAgc2NyaXB0Lm9ubG9hZCA9ICgpID0+IHtcbi8vICAgICAgICAgICAgIC8vIEluaXRpYWxpemUgdGhlIEdvb2dsZSBDaGFydHMgbGlicmFyeVxuLy8gICAgICAgICAgICAgZ29vZ2xlLmNoYXJ0cy5sb2FkKCdjdXJyZW50JywgeyAncGFja2FnZXMnOiBbJ2NvcmVjaGFydCddIH0pO1xuLy8gICAgICAgICAgICAgZ29vZ2xlLmNoYXJ0cy5zZXRPbkxvYWRDYWxsYmFjayhkcmF3Q2hhcnQpO1xuLy8gICAgICAgICB9O1xuLy8gICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNjcmlwdCk7XG5cbi8vICAgICAgICAgY29uc29sZS5sb2cocGFyc2VJbnQoY29ycmVjdEFuc3dlcnMpKTtcbi8vICAgICAgICAgLy8gRnVuY3Rpb24gdG8gZHJhdyB0aGUgY2hhcnRcbi8vICAgICAgICAgZnVuY3Rpb24gZHJhd0NoYXJ0KCkge1xuLy8gICAgICAgICAgICAgY29uc3QgZGF0YSA9IGdvb2dsZS52aXN1YWxpemF0aW9uLmFycmF5VG9EYXRhVGFibGUoW1xuLy8gICAgICAgICAgICAgICAgIFsnRWZmb3J0JywgJ0Ftb3VudCBnaXZlbiddLFxuLy8gICAgICAgICAgICAgICAgIFsnQ29ycmVjdCcsIHBhcnNlSW50KGNvcnJlY3RBbnN3ZXJzKV0sXG4vLyAgICAgICAgICAgICAgICAgWydJbmNvcnJlY3QnLCAxNSAtIHBhcnNlSW50KGNvcnJlY3RBbnN3ZXJzKV0sXG4vLyAgICAgICAgICAgICBdKTtcblxuLy8gICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcbi8vICAgICAgICAgICAgICAgICBwaWVIb2xlOiAwLjYsXG4vLyAgICAgICAgICAgICAgICAgcGllU2xpY2VUZXh0U3R5bGU6IHtcbi8vICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICdibGFjaycsXG4vLyAgICAgICAgICAgICAgICAgfSxcbi8vICAgICAgICAgICAgICAgICBsZWdlbmQ6ICdub25lJyxcbi8vICAgICAgICAgICAgICAgICBzbGljZXM6IHtcbi8vICAgICAgICAgICAgICAgICAgICAgMDogeyBjb2xvcjogJyMxZDRlZDgnIH0sIC8vIEdyZWVuIGZvciBjb3JyZWN0IGFuc3dlcnNcbi8vICAgICAgICAgICAgICAgICAgICAgMTogeyBjb2xvcjogJyM5NGEzYjgnIH0sIC8vIFdoaXRlIGZvciBpbmNvcnJlY3QgYW5zd2Vyc1xuLy8gICAgICAgICAgICAgICAgIH0sXG4vLyAgICAgICAgICAgICAgICAgdG9vbHRpcDogeyB0cmlnZ2VyOiAnbm9uZScgfSwgLy8gVHVybiBvZmYgdGhlIHRvb2x0aXBcbi8vICAgICAgICAgICAgICAgICBwaWVTbGljZUJvcmRlckNvbG9yOiAnbm9uZScsIC8vIFJlbW92ZSB0aGUgYm9yZGVyIGhpZ2hsaWdodCBvbiBzZWxlY3Rcbi8vICAgICAgICAgICAgICAgICBwaWVTbGljZVRleHQ6ICdub25lJywgLy8gUmVtb3ZlIHRoZSBwZXJjZW50YWdlIHRleHRcbi8vICAgICAgICAgICAgIH07XG5cbi8vICAgICAgICAgICAgIGNvbnN0IGNoYXJ0ID0gbmV3IGdvb2dsZS52aXN1YWxpemF0aW9uLlBpZUNoYXJ0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkb251dF9zaW5nbGUnKSk7XG4vLyAgICAgICAgICAgICBjaGFydC5kcmF3KGRhdGEsIG9wdGlvbnMpO1xuLy8gICAgICAgICB9XG5cbi8vICAgICAgICAgcmV0dXJuICgpID0+IHtcbi8vICAgICAgICAgICAgIC8vIENsZWFuIHVwIHRoZSBzY3JpcHQgZWxlbWVudFxuLy8gICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChzY3JpcHQpO1xuLy8gICAgICAgICB9O1xuLy8gICAgIH0sIFtjb3JyZWN0QW5zd2Vyc10pO1xuXG4vLyAgICAgcmV0dXJuIChcbi8vICAgICAgICAgPGRpdiBpZD1cImRvbnV0X3NpbmdsZVwiIGNsYXNzTmFtZT0nJyBzdHlsZT17eyB3aWR0aDogJzgwMHB4JywgaGVpZ2h0OiAnNDAwcHgnIH19PjwvZGl2PlxuLy8gICAgICk7XG4vLyB9XG5cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/PieChart.tsx\n"));

/***/ })

});